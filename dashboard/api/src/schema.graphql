type Address {
   address: String!
   city: String!
   id: String!
   state: String!
   zip: String!
   partys: [Party] @relation(name: "ADDRESS", direction: "IN")
}

type CreditCard {
   currency: String!
   full: String!
   id: String!
   provider: String!
   type: String!
   partys: [Party] @relation(name: "CREDIT_CARD", direction: "IN")
}

type Account {
   currency: String!
   iban: String!
   id: String!
   type: String!
   partys: [Party] @relation(name: "ACCOUNT", direction: "IN")
}

type SSN {
   ssn: String!
   partys: [Party] @relation(name: "SSN", direction: "IN")
}

type Phone {
   id: String
   number: String!
   partys: [Party] @relation(name: "PHONE", direction: "IN")
}

type Cookie {
   cookie: String!
   cookie_id: String!
   id: String!
   ip: String!
   partys_cookie: [Party] @relation(name: "COOKIE", direction: "IN")
   multiparty_size: Int @cypher(statement: "RETURN SIZE( (this)<-[:COOKIE]-(:Party) )")
}

type Party {
   case_id: String
   first_name: String
   fraud_confirmed: Boolean
   fraud_followup: Boolean
   id: Int!
   last_name: String
   occupation: String
   louvainCommunity: Int
   bloomURL: String @cypher(statement:"""
   RETURN 'http://67.205.129.81:7474/browser/bloom?perspective=Fraud&search=View+Party+' + this.id
   """)
   address: [Address] @relation(name: "ADDRESS", direction: "OUT")
   phone: [Phone] @relation(name: "PHONE", direction: "OUT")
   ssn: [SSN] @relation(name: "SSN", direction: "OUT")
   credit_card: [CreditCard] @relation(name: "CREDIT_CARD", direction: "OUT")
   account: [Account] @relation(name: "ACCOUNT", direction: "OUT")
   cookie: [Cookie] @relation(name: "COOKIE", direction: "OUT")
   multiparty_cookie: [Cookie] @relation(name: "MULTIPARTY_COOKIE", direction: "OUT")
   sharedIdentitySize: Int @cypher(statement: """
   RETURN SIZE( (this)-[:SSN|PHONE|COOKIE]-()-[:SSN|PHONE|COOKIE]-(:Party) )
   """)
   sharedIdentity: [Party] @cypher(statement: """
   MATCH (this)-[:SSN|PHONE|COOKIE]-()-[:SSN|PHONE|COOKIE]-(p2:Party)
   RETURN p2
   """)
}

type Query {
  getSuspiciousParties: [Party] @cypher(statement:"""
   MATCH path=(p1:Party)-[:SSN|PHONE|COOKIE]-()-[:SSN|PHONE|COOKIE]-(p2:Party)-[*..2]-()--(:Party)
   RETURN DISTINCT p1 AS party LIMIT 100
   """)
   getFraudRing: [Party] @cypher(statement:"""
   TODO
   """)
   getFraudCommunity(community: Int): [Party] @cypher(statement: """
   MATCH (p:Party) WHERE p.louvainCommunity = $community
   RETURN p
   """)
}